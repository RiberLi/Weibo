var util = require('util'),
    winston = require('winston');

var mysqlLogger = winston.transports.mysqlLogger = function (options) {
    this.name = 'mysqlLogger';
    this.level = options.level || 'info';

    this.dbsettings = options.dbsettings
    this.logDbName = options.logDbName;
    this.sqlhelper = require("cloud-sqlhelper")(this.dbsettings);
    this.tableName = options.tableName;
    this.createTbSql  = options.createTbSql;
    this.isDaily = options.isDaily || false;
};

function getDailyTableName(tbName){
    var now =new Date();
    var monthpart = "" + (now.getMonth()+1);
    if(monthpart.length == 1){
        monthpart = "0" + monthpart;
    }
    var daypart = "" + now.getDate();
    if(daypart.length == 1){
        daypart = "0" + daypart;
    }
    var yearpart = "" + now.getFullYear();
    var tableName = tbName + "_" + yearpart + monthpart + daypart;
    return tableName;
}

function createTable(sqlhelper, dbname, tableName, createSql, callback){
    sql = 'CREATE TABLE `' + tableName + createSql;
    sqlhelper.ExecuteNoQuery(dbname, sql, {}, callback);
};

util.inherits(mysqlLogger, winston.Transport);

mysqlLogger.prototype.logException = function(msg, meta, callback){
    this.log("error", msg, meta, callback);
};

mysqlLogger.prototype.log = function (level, msg, meta, callback) {
    var self = this;

    var sqlhelper = this.sqlhelper;
    var tableName = this.isDaily? getDailyTableName(this.tableName): this.tableName;
    var dbName = this.logDbName;
    var createTbSql = this.createTbSql;

    process.nextTick(function() {
        sqlhelper.InsertJson(dbName, tableName, meta, function(err, rowID) {
            if(err && (err.code== 'ER_NO_SUCH_TABLE' || err.errno == 1146)){
                createTable(sqlhelper, dbName, tableName, createTbSql, function(err, result){
                    self.log(level, msg, meta, callback);
                });
                return;
            }
            self.emit('logged');
            callback(null, true);
        });
    });
};