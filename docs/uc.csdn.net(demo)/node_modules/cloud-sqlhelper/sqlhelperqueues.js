module.exports = function(config){
    var mysql = require("mysql");
    var queues = require('mysql-queues');
    var sqlhelper = {};

    var queryformat = function (query, values) {
        if (!values) return query;
        return query.replace(/\@(\w+)/g, function (txt, key) {
            if (values.hasOwnProperty(key)) {
                return this.escape(values[key]);
            }
            return txt;
        }.bind(this));
    };

    config.multipleStatements = true;
    var pool  = mysql.createPool(config);

    //The maximum number of connections to create at once
    sqlhelper.SetConnectionLimit = function(Limit){
        pool.connectionLimit = Limit;
    }

    //
//    sqlhelper.ResetPool = function(){
//        pool.waitForConnections()
//    }

    sqlhelper.ExecuteDataRow = function (sql, params, callback){
        pool.getConnection(function(err, conn) {
            queues(conn, true);
            conn.config.queryFormat = queryformat;
            conn.query(sql, params, function(err, rows) {
                callback(err, (rows && rows.length> 0)? rows[0]: null);
                conn.release();
            });
        });
    };


    sqlhelper.ExecuteDataTable = function (sql, params, callback){
        pool.getConnection(function(err, conn) {
            queues(conn, true);
            conn.config.queryFormat = queryformat;
            conn.query(sql, params, function(err, rows) {
                callback(err, rows);
                conn.release();
            });
        });
    };

    sqlhelper.ExecuteDataSet = function (sql, params, callback){
        pool.getConnection(function(err, conn) {
            queues(conn, true);
            conn.config.queryFormat = queryformat;
            conn.query(sql, params, function(err, rows) {
                callback(err, rows);
                conn.release();
            });
        });
    };

    sqlhelper.ExecuteInsert = function(sql, params, callback){
        pool.getConnection(function(err, conn) {
            queues(conn, true);
            conn.config.queryFormat = queryformat;
            conn.query(sql, params, function(err, rows) {
                callback(err, rows.insertId);
                conn.release();
            });
        });
    };

    sqlhelper.ExecuteDataByPage = function (sql, params, pageindex, pagesize, callback){
        var index = ( pageindex - 1 ) * pagesize;
        pool.getConnection(function(err, conn) {
            queues(conn, true);
            conn.config.queryFormat = queryformat;
            conn.query(sql + ' LIMIT ' + index + ',' + pagesize + ';' + 'select count(*) as count from (' + sql + ') as counttable', params, function(err, result) {
                callback(err, result[0], result[1][0].count);
                conn.release();
            });
        });
    };

    sqlhelper.EndPool = function(){
        pool.end();
    }

    return sqlhelper;
}




